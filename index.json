[{"categories":null,"content":"随着国内自媒体的盛行，如何低成本高效的实现排版成为摆在所有自媒体人面前的一道重要的关卡。此时，Markdown语法从小众开始进入大众视野。Markdown可以理解为一种简化的html语法，其语法特性决定了其天然兼容html语法，易读，易写，已修改，跨平台，高自由度等等特性都使其成为个人文章排版的最优选择。 ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:0:0","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"1. Markdown 是什么 Markdown是一种轻量级标记语言，它以纯文本形式(易读、易写、易更改)编写文档，并最终以HTML格式发布。Markdown也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。 ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:1:0","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"2. 基础语法 基础的Markdown语法主要包含：标题，段落，加粗倾斜，分割线删除线，引用，代码块，列表，链接，图片 ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:2:0","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"标题 一般标题可以分为一级标题，二级标题，三级标题…… 使用=和-标记一级和二级标题。 一级标题 ===== 二级标题 - 可以通过添加#表示标题，#数目表示标题等级，最多六级 # 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题 注：一般博客从二级标题开始，一级标题过大 ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:2:1","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"段落 段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用两个以上空格加上回车（引用中换行省略回车）。 ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:2:2","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"加粗倾斜分割线删除线 在内容两侧分别加上*或者_，如： *斜体*，_斜体_ **加粗**，__加粗__ 分割线最常使用就是三个或以上-，还可以使用*和_。删除线则是句子前后加两个波浪号~~ 效果： 斜体 粗体 删除线 ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:2:3","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"引用 在段落的每行或者只在第一行使用符号\u003e,还可使用多个嵌套引用，如： \u003e 区块引用 \u003e\u003e 嵌套引用 效果： 引用 嵌套引用 ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:2:4","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"代码块 代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样），注意要和普通段落间存在空行，最常用围墙式代码块，即使用 3 个连续的反单引号把一段文字包围起来表示代码块，这样可以避免每行代码开头都添加 4 个空格。使用围墙式代码块还有有个额外的功能：可以指定编程语言类别，让其中的代码实现语法高亮，方法是在第一行反单引号后面写上语言种类的名称。如 ​```C void main() { printf(\"Hello, World\"); } ​``` 注意:需要和普通段落之间存在空行。 行内也可以对较短的字符标记代码，方法是使用两个返单引号，如： 行内`短`代码 ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:2:5","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"列表 使用·、+、或-标记无序列表，符号后需添加一个空格才能继续书写文字 使用数字并辅以.标记有序列表 - 第一项 + 第一项 . 第一项 1. 第一项 1. 第二项 对应效果为： 第一项 第一项 . 第一项 第一项 第二项 ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:2:6","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"超链接 链接的形式有两种：行内式和参考式 行内式语法为 [百度](https://www.baidu.com/) 参考式语法为 [百度][1] [京东][2] [1]:https://www.baidu.com/ [2]:https://www.jd.com/ 效果为： 百度 京东 ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:2:7","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"图片 添加图片的形式和链接相似，只需在链接的基础上前方加一个! ![Aaron Swartz](https://laregledujeu.org/files/2013/01/Aaron_Swartz.jpg) ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:2:8","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"3. 扩展语法 扩展语法可以实现一些比较特殊的需求，但是不是所有的markdown编辑器都支持，所以在使用中需要注意兼容性。 ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:3:0","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"待办事项 语法为：- [ ]表示未完成事项，- [X]表示已经完成事项 效果： 待办 已完成 ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:3:1","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"转义字符 Markdown中使用多种符号代表不同含义，如果要输入这些符号怎么办呢？此时就要使用到转义字符，他的作为是让语法符号变为普通符号。转义字符为反斜杠\\ ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:3:2","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"表格 不同编辑器渲染的表格样式是不同的，支持力度也不同，譬如我非常喜欢的笔记软件 notion ，虽然支持部分Markdown语法，但是会将表格自动转化为database，导致在逆向输出的时候无法还原为Markdown表格。 具体语法为使用|表示纵向边界，表头和内容使用-分隔开，使用:进行对齐操作，两侧都有表示居中对齐，不加默认左对齐。 |表头左对齐|表头右对齐|表头居中对齐| |-|:-:|-:| |内容左|内容右|内容中| 效果： 表头左对齐 表头右对齐 表头居中对齐 内容左 内容右 内容中 ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:3:3","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"缩进 修改代码块缩进方法通用，都是选择要缩进代码，使用Tab 键增加缩进，按 Shift + Tab 键减少缩进。 还可以使用的缩进方法 使用表示空格的特殊字符\u0026nbsp;或\u0026#160; 输入法半角改全角，然后连续键入两个空格（半角改全角的快捷键为Shift+Space） ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:3:4","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"数学公式 公式的语法规则基本和Latex相同，可参见常用数学符号的 LaTeX 表示方法 主要也分为行内和区块两种，行内公式使用单个美元符$包围，区块使用两个美元符，比如 $2^2$ $$ \\frac{2}{3} $$ 效果如下（要看渲染引擎是否支持） $2^2$ $$ \\frac{2}{3} $$ ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:3:5","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"特殊字符 不论是对公式的编辑，还是平时的使用，经常会遇到一些数学符号、希腊字母等特殊的字符，这些字符可以直接键入其命名实体或十进制代码而无需转义符\\包含就能显示，一个简单的例子如下。 字符：希腊字母阿尔法 命名实体表示：\u0026Phi; 十进制编码表示：\u0026#934; 效果为 \u0026#934 ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:3:6","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"4. Html 语法 由于markdown最终还是要转换成HTML页面，所以实际上可以使用一些HTML的语法来辅助书写 ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:4:0","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"插入空行 使用\u003c/br\u003e可以替代作为空行插入 ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:4:1","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"文字居中 写法如下 \u003ccenter\u003e这一行需要居中\u003c/center\u003e 效果如下 这一行需要居中 ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:4:2","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"上下标 写法如下 H\u003csub\u003e2\u003c/sub\u003eO 爆米\u003csup\u003eTM\u003c/sup\u003e 效果 H2O 爆米TM ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:4:3","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"字体颜色与字号 写法如下 \u003cfont color=\"#FF0000\"\u003e 红色 \u003c/font\u003e \u003cfont size=6\u003e size=6 \u003c/font\u003e \u003cfont size=5 color=\"#FF0000\"\u003e size=5的红色\u003c/font\u003e 效果如下 红色 size=6 size=5的红色 ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:4:4","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"图片 原始图片规格不一，展示出来的效果往往很不好，使用HTML的语法可以定制图片的某些属性。以上面的创始人Aaron Swartz的图片为例，我们控制其大小 \u003cimg src=\"https://laregledujeu.org/files/2013/01/Aaron_Swartz.jpg\" width=\"512\" height=\"384\" /\u003e 通过将多张图片放在一个一行多列的表格中，线宽设置为0， 可以让这些图片并排显示，代码如下 \u003ctable\u003e\u003ctr\u003e \u003ctd\u003e\u003cimg src=\"http://bimgs.plmeizi.com/images/bing/2019/OHR.BeaujolaisRegion_ZH-CN1585928268_1920x1080.jpg\" alt=\"风景1\" style=\"zoom: 67%;\" /\u003e\u003c/td\u003e \u003ctd\u003e\u003cimg src=\"http://bimgs.plmeizi.com/images/bing/2020/OHR.MalhamStars_ZH-CN4163177154_1920x1080.jpg\" alt=\"风景2\" style=\"zoom: 67%;\" /\u003e\u003c/td\u003e \u003c/tr\u003e\u003c/table\u003e ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:4:5","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"页内跳转 先定义一个锚 \u003cspan id=\"jump\"\u003eHello World\u003c/span\u003e 然后使用markdown语法即可跳转到锚所在之处 [XXXX](#jump) ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:4:6","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":null,"content":"附录：特殊字符对照 普通字符 特殊符号 命名实体 十进制编码 空格 \u0026nbsp; \u0026#160; 全角空格 \u0026emsp; \u0026#12288; ’ \u0026apos; \u0026#39; \" \u0026quot; \u0026#34; ( — \u0026#40; ) — \u0026#41; \u003c \u0026lt; \u0026#60; \u003e \u0026gt; \u0026#62; [ — \u0026#91; ] — \u0026#93; { — \u0026#123; } — \u0026#125; ´ \u0026acute; \u0026#180; ° \u0026deg; \u0026#176; ® \u0026reg; \u0026#174; © \u0026copy; \u0026#169; 数学符号 特殊符号 命名实体 十进制编码 ≤ \u0026le; \u0026#8804; ≥ \u0026ge; \u0026#8805; ≈ \u0026asymp; \u0026#8773; ≠ \u0026ne; \u0026#8800; ∩ \u0026cap; \u0026#8745; ∪ \u0026cup; \u0026#8746; ∠ \u0026ang; \u0026#8736; ∞ \u0026infin; \u0026#8734; ± \u0026plusmn; \u0026#177; √ \u0026radic; \u0026#8730; ∑ \u0026sum; \u0026#8722; ∫ \u0026int; \u0026#8747; Δ \u0026Delta; \u0026#916; 希腊字母 特殊符号 命名实体 十进制编码 Φ \u0026Phi; \u0026#934; Ω \u0026Omega; \u0026#937; α \u0026alpha; \u0026#945; β \u0026beta; \u0026#946; γ \u0026gamma; \u0026#947; δ \u0026delta; \u0026#948; ε \u0026epsilon; \u0026#949; ζ \u0026zeta; \u0026#950; η \u0026eta; \u0026#951; θ \u0026theta; \u0026#952; λ \u0026lambda; \u0026#955; μ \u0026mu; \u0026#956; ξ \u0026xi; \u0026#958; π \u0026pi; \u0026#960; ρ \u0026rho; \u0026#961; σ \u0026sigma; \u0026#963; φ \u0026phi; \u0026#966; ψ \u0026psi; \u0026#968; ω \u0026omega; \u0026#969; ∂ \u0026part; \u0026#8706; ∅ \u0026empty; \u0026#8709; ","date":"2021-08-01","objectID":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/:5:0","tags":["hugo","技术","文档"],"title":"Markdown语法小结","uri":"/markdown%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/"},{"categories":["Hugo"],"content":"hugo博客添加音乐 hugo 作为流行的静态网站生成器，近两年被广泛应用在静态博客生成中，类似这种静态的静态网页生成器一般通过js插件实现各种神奇的小功能，为了能够美化自己的网页，在网页中嵌入一个小型的音乐播放器是一个比较好的选择，主要参考链接为：https://mrbruce516.top/2020/011/，当然，现在还有很多不完善的地方，譬如切换文章音乐暂停，可以使用pjax解决这个问题。 本站使用的主题为LoveIt主题，可以很方便的嵌入音乐组件，具体效果如下： ","date":"2021-04-13","objectID":"/hugo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90/:1:0","tags":["hugo","音乐"],"title":"Hugo博客添加音乐","uri":"/hugo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90/"},{"categories":null,"content":"java 常用命令 ","date":"2020-09-08","objectID":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:0:0","tags":null,"title":"Java程序常用命令","uri":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"},{"categories":null,"content":"jstat 查看堆内存各部分的使用量，以及加载类的数量 ","date":"2020-09-08","objectID":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:1:0","tags":null,"title":"Java程序常用命令","uri":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"},{"categories":null,"content":"官方文档 Usage: jstat -help|-options jstat -\u003coption\u003e [-t] [-h\u003clines\u003e] \u003cvmid\u003e [\u003cinterval\u003e [\u003ccount\u003e]] Definitions: \u003coption\u003e An option reported by the -options option \u003cvmid\u003e Virtual Machine Identifier. A vmid takes the following form: \u003clvmid\u003e[@\u003chostname\u003e[:\u003cport\u003e]] Where \u003clvmid\u003e is the local vm identifier for the target Java virtual machine, typically a process id; \u003chostname\u003e is the name of the host running the target Java virtual machine; and \u003cport\u003e is the port number for the rmiregistry on the target host. See the jvmstat documentation for a more complete description of the Virtual Machine Identifier. \u003clines\u003e Number of samples between header lines. \u003cinterval\u003e Sampling interval. The following forms are allowed: \u003cn\u003e[\"ms\"|\"s\"] Where \u003cn\u003e is an integer and the suffix specifies the units as milliseconds(\"ms\") or seconds(\"s\"). The default units are \"ms\". \u003ccount\u003e Number of samples to take before terminating. -J\u003cflag\u003e Pass \u003cflag\u003e directly to the runtime system. option： 参数选项 -t： 可以在打印的列加上Timestamp列，用于显示系统运行的时间 -h： 可以在周期性数据数据的时候，可以在指定输出多少行以后输出一次表头 vmid： Virtual Machine ID（ 进程的 pid） interval： 执行每次的间隔时间，单位为毫秒 count： 用于指定输出多少次记录，缺省则会一直打印 ","date":"2020-09-08","objectID":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:1:1","tags":null,"title":"Java程序常用命令","uri":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"},{"categories":null,"content":"常用命令 统计单位为KB 类加载统计 jstat -class pid Loaded : 已经装载的类的数量 Bytes : 装载类所占用的字节数 Unloaded：已经卸载类的数量 Bytes：卸载类的字节数 Time：装载和卸载类所花费的时间 编译统计 jstat -compiler pid Compiled：编译任务执行数量 Failed：编译任务执行失败数量 Invalid ：编译任务执行失效数量 Time ：编译任务消耗时间 FailedType：最后一个编译失败任务的类型 FailedMethod：最后一个编译失败任务所在的类及方法 垃圾回收统计 jstat -gc pid S0C：年轻代中第一个survivor（幸存区）的容量 S1C：年轻代中第二个survivor（幸存区）的容量 S0U：年轻代中第一个survivor（幸存区）目前已使用空间 S1U：年轻代中第二个survivor（幸存区）目前已使用空间 EC：年轻代中Eden（伊甸园）的容量 EU：年轻代中Eden（伊甸园）目前已使用空间 OC：老年代的容量 OU：老年代目前已使用空间 MC：方法区大小 MU：方法区使用大小 CCSC:压缩类metaspace空间大小 CCSU:压缩类空间使用大小 YGC：年轻代垃圾回收次数 YGCT：年轻代垃圾回收消耗时间 FGC：老年代垃圾回收次数 FGCT：老年代垃圾回收消耗时间 GCT：垃圾回收消耗总时间 堆内存统计 jstat -gccapacity pid NGCMN：新生代最小容量 NGCMX：新生代最大容量 NGC：当前新生代容量 S0C：第一个幸存区大小 S1C：第二个幸存区的大小 EC：伊甸园区的大小 OGCMN：老年代最小容量 OGCMX：老年代最大容量 OGC：当前老年代大小 OC:当前老年代大小 MCMN:最小元数据容量 MCMX：最大元数据容量 MC：当前元数据空间大小 CCSMN：最小压缩类空间大小 CCSMX：最大压缩类空间大小 CCSC：当前压缩类空间大小 YGC：年轻代gc次数 FGC：老年代GC次数 新声代垃圾回收统计 jstat -gcnew pid S0C：第一个幸存区大小 S1C：第二个幸存区的大小 S0U：第一个幸存区的使用大小 S1U：第二个幸存区的使用大小 TT:对象在新生代存活的次数 MTT:对象在新生代存活的最大次数 DSS:期望的幸存区大小 EC：伊甸园区的大小 EU：伊甸园区的使用大小 YGC：年轻代垃圾回收次数 YGCT：年轻代垃圾回收消耗时间 新生代内存统计 jstat -gcnewcapacity pid NGCMN：新生代最小容量 NGCMX：新生代最大容量 NGC：当前新生代容量 S0CMX：最大幸存1区大小 S0C：当前幸存1区大小 S1CMX：最大幸存2区大小 S1C：当前幸存2区大小 ECMX：最大伊甸园区大小 EC：当前伊甸园区大小 YGC：年轻代垃圾回收次数 FGC：老年代回收次数 老年代垃圾回收统计 jstat -gcold pid MC：方法区大小 MU：方法区使用大小 CCSC:压缩类空间大小 CCSU:压缩类空间使用大小 OC：老年代大小 OU：老年代使用大小 YGC：年轻代垃圾回收次数 FGC：老年代垃圾回收次数 FGCT：老年代垃圾回收消耗时间 GCT：垃圾回收消耗总时间 老年代内存统计 jstat -gcoldcapacity pid OGCMN：老年代最小容量 OGCMX：老年代最大容量 OGC：当前老年代大小 OC：老年代大小 YGC：年轻代垃圾回收次数 FGC：老年代垃圾回收次数 FGCT：老年代垃圾回收消耗时间 GCT：垃圾回收消耗总时间 总结垃圾回收统计 jstat -gcutil pid S0：幸存1区当前使用比例 S1：幸存2区当前使用比例 E：伊甸园区使用比例 O：老年代使用比例 M：元数据区使用比例 CCS：压缩使用比例 YGC：年轻代垃圾回收次数 FGC：老年代垃圾回收次数 FGCT：老年代垃圾回收消耗时间 GCT：垃圾回收消耗总时间 jvm编译方法统计 jstat -printcompilation pid Compiled：最近编译方法的数量 Size：最近编译方法的字节码数量 Type：最近编译方法的编译类型。 Method：方法名标识。 ","date":"2020-09-08","objectID":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:1:2","tags":null,"title":"Java程序常用命令","uri":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"},{"categories":null,"content":"jps ","date":"2020-09-08","objectID":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:2:0","tags":null,"title":"Java程序常用命令","uri":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"},{"categories":null,"content":"官方手册 usage: jps [-help] jps [-q] [-mlvV] [\u003chostid\u003e] Definitions: \u003chostid\u003e: \u003chostname\u003e[:\u003cport\u003e] ","date":"2020-09-08","objectID":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:2:1","tags":null,"title":"Java程序常用命令","uri":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"},{"categories":null,"content":"常用方法 jps 23991 Jps 23651 Resin 显示pid与对应的程序 jps -q 28680 23789 只显示pid，不显示jar文件名，class名称和传递给main的参数 jps -m 28715 Jps -m 23789 BossMain 输出传递给main的参数 jps -l 28729 sun.tools.jps.Jps 23789 com.asiainfo.aimc.bossbi.BossMain 输出应用程序main class的完整package名或者应用程序的jar文件完整路径名 jps -v 输出传递给JVM的参数 jps -V 隐藏输出传递给JVM的参数 ","date":"2020-09-08","objectID":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:2:2","tags":null,"title":"Java程序常用命令","uri":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"},{"categories":null,"content":"jinfo ","date":"2020-09-08","objectID":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:3:0","tags":null,"title":"Java程序常用命令","uri":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"},{"categories":null,"content":"官方手册 Usage: jinfo [option] \u003cpid\u003e (to connect to running process) jinfo [option] \u003cexecutable \u003ccore\u003e (to connect to a core file) jinfo [option] [server_id@]\u003cremote server IP or hostname\u003e (to connect to remote debug server) where \u003coption\u003e is one of: -flag \u003cname\u003e to print the value of the named VM flag -flag [+|-]\u003cname\u003e to enable or disable the named VM flag -flag \u003cname\u003e=\u003cvalue\u003e to set the named VM flag to the given value -flags to print VM flags -sysprops to print Java system properties \u003cno option\u003e to print both of the above -h | -help to print this help message ","date":"2020-09-08","objectID":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:3:1","tags":null,"title":"Java程序常用命令","uri":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"},{"categories":null,"content":"jmap ","date":"2020-09-08","objectID":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:4:0","tags":null,"title":"Java程序常用命令","uri":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"},{"categories":null,"content":"官方手册 Usage: jmap [option] \u003cpid\u003e (to connect to running process) jmap [option] \u003cexecutable \u003ccore\u003e (to connect to a core file) jmap [option] [server_id@]\u003cremote server IP or hostname\u003e (to connect to remote debug server) where \u003coption\u003e is one of: \u003cnone\u003e to print same info as Solaris pmap -heap to print java heap summary -histo[:live] to print histogram of java object heap; if the \"live\" suboption is specified, only count live objects -clstats to print class loader statistics -finalizerinfo to print information on objects awaiting finalization -dump:\u003cdump-options\u003e to dump java heap in hprof binary format dump-options: live dump only live objects; if not specified, all objects in the heap are dumped. format=b binary format file=\u003cfile\u003e dump heap to \u003cfile\u003e Example: jmap -dump:live,format=b,file=heap.bin \u003cpid\u003e -F force. Use with -dump:\u003cdump-options\u003e \u003cpid\u003e or -histo to force a heap dump or histogram when \u003cpid\u003e does not respond. The \"live\" suboption is not supported in this mode. -h | -help to print this help message -J\u003cflag\u003e to pass \u003cflag\u003e directly to the runtime system ","date":"2020-09-08","objectID":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:4:1","tags":null,"title":"Java程序常用命令","uri":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"},{"categories":null,"content":"常用命令 ","date":"2020-09-08","objectID":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:4:2","tags":null,"title":"Java程序常用命令","uri":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"},{"categories":null,"content":"jstack ","date":"2020-09-08","objectID":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:5:0","tags":null,"title":"Java程序常用命令","uri":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"},{"categories":null,"content":"官方手册 Usage: jstack [-l] \u003cpid\u003e (to connect to running process) jstack -F [-m] [-l] \u003cpid\u003e (to connect to a hung process) jstack [-m] [-l] \u003cexecutable\u003e \u003ccore\u003e (to connect to a core file) jstack [-m] [-l] [server_id@]\u003cremote server IP or hostname\u003e (to connect to a remote debug server) Options: -F to force a thread dump. Use when jstack \u003cpid\u003e does not respond (process is hung) -m to print both java and native frames (mixed mode) -l long listing. Prints additional information about locks -h or -help to print this help message ","date":"2020-09-08","objectID":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:5:1","tags":null,"title":"Java程序常用命令","uri":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"},{"categories":null,"content":"常用命令 ","date":"2020-09-08","objectID":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/:5:2","tags":null,"title":"Java程序常用命令","uri":"/java%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"},{"categories":null,"content":"一点小感悟 自建博客的道路多年前就开始了，这条路自己走的异常曲折，总的来说还是自己折腾的心不死，最终导致的结果是个人文章数据全部丢失，不得不重新开始，不过这一切一切，也教会自己返璞归真的重要性以及自力更生的必要。 ","date":"2020-09-06","objectID":"/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB%E5%BA%86%E7%A5%9D%E5%8D%9A%E5%AE%A2%E5%BC%80%E7%AB%99/:1:0","tags":null,"title":"个人博客搭建分享（庆祝博客开站）","uri":"/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB%E5%BA%86%E7%A5%9D%E5%8D%9A%E5%AE%A2%E5%BC%80%E7%AB%99/"},{"categories":null,"content":"博客搭建方案总结 纵览市面上常见的个人博客搭建方案，虽然各有特点，有难有易，但是按照现有教程，0基础小白最多一周都可以搭建出一个符合自己需求的个人博客。搭建不难，坚持不易。一定要找到自己的目标是什么，也就是找准博客的定位。否则也只是空有皮囊，还不如直接用简书知乎之类的成熟平台来的有效。 ","date":"2020-09-06","objectID":"/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB%E5%BA%86%E7%A5%9D%E5%8D%9A%E5%AE%A2%E5%BC%80%E7%AB%99/:2:0","tags":null,"title":"个人博客搭建分享（庆祝博客开站）","uri":"/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB%E5%BA%86%E7%A5%9D%E5%8D%9A%E5%AE%A2%E5%BC%80%E7%AB%99/"},{"categories":null,"content":"方案归类 类别 优点 缺点 举例 公用平台 注册账号即可用，编辑器成熟，数据安全有保障 个人输出传播质量严重依赖平台口碑，自由度低 知乎，csdn，简书，公众号 部分自建平台 数据自主管理，数据安全有一定保障 有一定入门门槛，前期传播需要依靠自己 github，码云 完全自建平台 完全自主管理，自有服务器不仅可以建博客，还能建你想到的一切 门槛高，服务器成本高，数据安全依赖服务器厂商稳定性与自身项目管理能力 阿里云，腾讯云，搬瓦工，vultr ","date":"2020-09-06","objectID":"/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB%E5%BA%86%E7%A5%9D%E5%8D%9A%E5%AE%A2%E5%BC%80%E7%AB%99/:2:1","tags":null,"title":"个人博客搭建分享（庆祝博客开站）","uri":"/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB%E5%BA%86%E7%A5%9D%E5%8D%9A%E5%AE%A2%E5%BC%80%E7%AB%99/"},{"categories":null,"content":"个人推荐 如果只是想分享一下自己学习笔记或者生活趣事，强烈建议使用现有的平台，这种方法虽然自由度最低，但是确实折腾的最少的，内容最安全的方法，同时，这种方法还要一个另外两种方案难以比拟的优点：独特的社区文化。不仅分享自己，同时能享受其他人的分享，可以说是适合所有人的完美方案，当然，如果你有安全上网顺带想建个自己的博客，请按需选择，在此不做细言。 ","date":"2020-09-06","objectID":"/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB%E5%BA%86%E7%A5%9D%E5%8D%9A%E5%AE%A2%E5%BC%80%E7%AB%99/:2:2","tags":null,"title":"个人博客搭建分享（庆祝博客开站）","uri":"/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB%E5%BA%86%E7%A5%9D%E5%8D%9A%E5%AE%A2%E5%BC%80%E7%AB%99/"},{"categories":null,"content":"一点小总结 今天主要把自己在博客路上折腾的一些小经验分享了一下，实际上这篇原先是庆祝博客重新开张的，后来看着内容实在太单薄了，于是就多啰嗦了两句。总而言之，庆祝自己的博客完善后重新上线，祝大家都能在分享的路上有所收获。 ","date":"2020-09-06","objectID":"/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB%E5%BA%86%E7%A5%9D%E5%8D%9A%E5%AE%A2%E5%BC%80%E7%AB%99/:3:0","tags":null,"title":"个人博客搭建分享（庆祝博客开站）","uri":"/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%88%86%E4%BA%AB%E5%BA%86%E7%A5%9D%E5%8D%9A%E5%AE%A2%E5%BC%80%E7%AB%99/"},{"categories":null,"content":"  LoveIt 是一个由 Dillon 开发的简洁、优雅且高效的 Hugo 博客主题。 它的原型基于 LeaveIt 主题 和 KeepIt 主题。 ","date":"2019-08-02","objectID":"/about/:0:0","tags":null,"title":"关于 LoveIt","uri":"/about/"}]